import Head from 'next/head';
import Table from '../components/Table';
import { useState, useEffect } from 'react';
import axios from 'axios';
import { Customer } from '../types';
import CustomerCreateModal from '../components/CustomerCreateModal';

export default function Home({customerData}: {customerData: Customer[]}) {
  const [customerDataArr, setCustomerDataArr] = useState<Customer[]>(customerData);

  const [showModal, setShowModal] = useState(false);

  const handleAddCustomer = (addedCustomer: Customer) => {
    setCustomerDataArr(prevArrState => {
      return [addedCustomer, ...prevArrState];
    });
  };

  let tableRows = customerDataArr.map(el => ({
    customerName: el.name,
    customerId: el.id,
    customerEmail: el.email,
    customerDeferralsDays: el.deferral_days,
    customerCreationDay: el.created_at,
    customerUpdateDay: el.updated_at,
  }));

  return (
    <>
      <Head>
        <title>Shtrafov Net Test | Клиенты</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="#"></link>
      </Head>
      <main>
        <div className="container mt-5">
          <div className="row mb-3">
            <div className="col d-flex justify-content-between">
              <h4>Клиенты</h4>
              <button
                type="button"
                className="btn btn-primary"
                onClick={() => setShowModal(true)}
              >
                <div className="d-flex align-items-center">
                  <div>+ Добавить клиента</div>
                </div>
              </button>
            </div>
          </div>
          <Table tableRows={tableRows} />
        </div>
        <CustomerCreateModal
          handleClose={() => setShowModal(false)}
          showModal={showModal}
          handleAddCustomer={handleAddCustomer}
        />
      </main>
    </>
  );
}

export async function getServerSideProps() {

  let res = await axios.get<Customer[]>(
    `${process.env.BACKEND_ADDRESS ?? 'http://backend:8080'}/customers?_sort=created_at&_order=desc`
  );
	const customerData = res.data;


  return {
    props: {
      customerData,
    }, 
  };
}
